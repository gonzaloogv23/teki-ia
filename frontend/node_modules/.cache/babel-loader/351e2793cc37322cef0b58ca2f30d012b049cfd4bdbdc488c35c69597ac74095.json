{"ast":null,"code":"import React,{useState,useEffect}from'react';import{collection,addDoc,getDocs,serverTimestamp}from'firebase/firestore';import{db}from'../firebaseConfig';import sambanovaService from'../services/SambanovaService';import'./estilosComponentes/chatbot.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatComponent=()=>{const[mensaje,setMensaje]=useState('');const[mensajes,setMensajes]=useState([]);const[primeraLlamada,setPrimeraLlamada]=useState(true);useEffect(()=>{const fetchMessages=async()=>{const mensajesSnapshot=await getDocs(collection(db,'mensajes'));const mensajesList=mensajesSnapshot.docs.map(doc=>doc.data());setMensajes(mensajesList);};fetchMessages();},[]);const handleSubmit=async event=>{event.preventDefault();try{const respuesta=await obtenerRespuesta(mensaje);const nuevoMensajeEnviado={texto:mensaje,tipo:'enviado',timestamp:serverTimestamp()};const nuevoMensajeRecibido={texto:respuesta,tipo:'recibido',timestamp:serverTimestamp()};await addDoc(collection(db,'mensajes'),nuevoMensajeEnviado);await addDoc(collection(db,'mensajes'),nuevoMensajeRecibido);setMensajes([...mensajes,nuevoMensajeEnviado,nuevoMensajeRecibido]);}catch(error){console.error(\"Error al obtener la respuesta\",error);const mensajeError={texto:\"Error al obtener la respuesta\",tipo:'recibido',timestamp:serverTimestamp()};setMensajes([...mensajes,{texto:mensaje,tipo:'enviado',timestamp:serverTimestamp()},mensajeError]);await addDoc(collection(db,'mensajes'),mensajeError);}setMensaje('');};const handleKeyPress=event=>{if(event.key==='Enter'){handleSubmit(event);}};const obtenerRespuesta=async mensaje=>{let textoEnviar=mensaje;if(primeraLlamada){textoEnviar=`Tu nombre es Teki, una llama joven que está aquí para ayudarte. ${mensaje}`;setPrimeraLlamada(false);}const respuesta=await sambanovaService.obtenerRespuesta(textoEnviar);return respuesta.message;};return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:\"Teki v1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-window\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"message-list\",children:mensajes.map((mensaje,index)=>/*#__PURE__*/_jsx(\"li\",{className:mensaje.tipo==='enviado'?'mensaje-enviado':'mensaje-recibido',children:mensaje.texto},index))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"message-input\",placeholder:\"Escribe tu mensaje aqu\\xED\",value:mensaje,onChange:event=>setMensaje(event.target.value),onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(\"button\",{className:\"send-button\",onClick:handleSubmit,children:\"Enviar\"})]})]});};export default ChatComponent;","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","serverTimestamp","db","sambanovaService","jsx","_jsx","jsxs","_jsxs","ChatComponent","mensaje","setMensaje","mensajes","setMensajes","primeraLlamada","setPrimeraLlamada","fetchMessages","mensajesSnapshot","mensajesList","docs","map","doc","data","handleSubmit","event","preventDefault","respuesta","obtenerRespuesta","nuevoMensajeEnviado","texto","tipo","timestamp","nuevoMensajeRecibido","error","console","mensajeError","handleKeyPress","key","textoEnviar","message","className","children","index","type","placeholder","value","onChange","target","onKeyPress","onClick"],"sources":["C:/Users/Gonza/Desktop/tekiste/frontend/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, addDoc, getDocs, serverTimestamp } from 'firebase/firestore';\r\nimport { db } from '../firebaseConfig';\r\nimport sambanovaService from '../services/SambanovaService';\r\nimport './estilosComponentes/chatbot.css';\r\n\r\nconst ChatComponent = () => {\r\n  const [mensaje, setMensaje] = useState('');\r\n  const [mensajes, setMensajes] = useState([]);\r\n  const [primeraLlamada, setPrimeraLlamada] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      const mensajesSnapshot = await getDocs(collection(db, 'mensajes'));\r\n      const mensajesList = mensajesSnapshot.docs.map(doc => doc.data());\r\n      setMensajes(mensajesList);\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const respuesta = await obtenerRespuesta(mensaje);\r\n      const nuevoMensajeEnviado = { texto: mensaje, tipo: 'enviado', timestamp: serverTimestamp() };\r\n      const nuevoMensajeRecibido = { texto: respuesta, tipo: 'recibido', timestamp: serverTimestamp() };\r\n\r\n      await addDoc(collection(db, 'mensajes'), nuevoMensajeEnviado);\r\n      await addDoc(collection(db, 'mensajes'), nuevoMensajeRecibido);\r\n\r\n      setMensajes([...mensajes, nuevoMensajeEnviado, nuevoMensajeRecibido]);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener la respuesta\", error);\r\n      const mensajeError = { texto: \"Error al obtener la respuesta\", tipo: 'recibido', timestamp: serverTimestamp() };\r\n      setMensajes([...mensajes, { texto: mensaje, tipo: 'enviado', timestamp: serverTimestamp() }, mensajeError]);\r\n      await addDoc(collection(db, 'mensajes'), mensajeError);\r\n    }\r\n    setMensaje('');\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSubmit(event);\r\n    }\r\n  };\r\n\r\n  const obtenerRespuesta = async (mensaje) => {\r\n    let textoEnviar = mensaje;\r\n    if (primeraLlamada) {\r\n      textoEnviar = `Tu nombre es Teki, una llama joven que está aquí para ayudarte. ${mensaje}`;\r\n      setPrimeraLlamada(false);\r\n    }\r\n    const respuesta = await sambanovaService.obtenerRespuesta(textoEnviar);\r\n    return respuesta.message;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"chat-header\">Teki v1</div>\r\n      <div className=\"chat-window\">\r\n        <ul className=\"message-list\">\r\n          {mensajes.map((mensaje, index) => (\r\n            <li key={index} className={mensaje.tipo === 'enviado' ? 'mensaje-enviado' : 'mensaje-recibido'}>\r\n              {mensaje.texto}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"message-input\"\r\n          placeholder=\"Escribe tu mensaje aquí\"\r\n          value={mensaje}\r\n          onChange={(event) => setMensaje(event.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <button className=\"send-button\" onClick={handleSubmit}>\r\n          Enviar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}